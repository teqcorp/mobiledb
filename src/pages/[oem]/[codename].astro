---
export const prerender = false;

import Layout from "@layouts/Layout.astro";
import { parse } from "yaml";

const { oem, codename } = Astro.params;

const url = `https://github.com/teqcorp/mobiledb_database/raw/main/devices/${oem}/${codename}.yml`;

const response = await fetch(url);
const data = parse(await response.text());

console.log(data);
---

<Layout title=`MobileDB | ${data.manufacturer} ${data.name}`>
  <div class="flex flex-col gap-4">
    <div class="text-sm breadcrumbs">
      <ul>
        <li><a href={`/${oem}`}>{data.manufacturer}</a></li>
        <li><a href={`/${oem}/${codename}`}>{data.name}</a></li>
      </ul>
    </div>
    <h1 class="text-2xl">{data.manufacturer} {data.name}</h1>

    <div class="flex flex-col gap-4">
      {data.released ? <span>Released: {data.released}</span> : null}
      <div class="flex flex-col">
        <h3>Models:</h3>
        <ul class="flex flex-col list list-disc list-inside ml-2">
          {
            data.models
              ? data.models.map((model: string) => {
                  return <li>{model}</li>;
                })
              : null
          }
        </ul>
      </div>
      {data.software ? <span>Software: {data.software}</span> : null}
      <div class="flex flex-col">
        <h3>Platform:</h3>
        <div class="flex flex-col ml-2">
          {
            data.platform && data.platform.soc ? (
              <span>SoC: {data.platform.soc}</span>
            ) : null
          }
          {
            data.platform && data.platform.gpu ? (
              <span>GPU: {data.platform.gpu}</span>
            ) : null
          }
        </div>
      </div>
      <div class="flex flex-col">
        <h3>Memory:</h3>
        <div class="flex flex-col ml-2">
          {data.memory && data.memory.variants ? <div>variants:</div> : null}
          <ul class="flex flex-col list list-disc list-inside ml-4">
            {
              data.memory && data.memory.variants
                ? data.memory.variants.map((variant: string) => {
                    return <li>{variant}</li>;
                  })
                : null
            }
          </ul>

          {
            data.memory && data.memory.type ? (
              <span>type: {data.memory.type}</span>
            ) : null
          }
          {
            data.memory && data.memory.sdcard != null ? (
              <span>SDCard: {data.memory.sdcard ? "Yes" : "No"}</span>
            ) : null
          }
        </div>
      </div>
      <div class="flex flex-col">
        <h3>Communication:</h3>
        <div class="flex flex-col ml-2">
          {
            data.communication && data.communication.radio != null ? (
              <span>FM radio: {data.communication.radio ? "Yes" : "No"}</span>
            ) : null
          }
          {
            data.communication && data.communication.nfc != null ? (
              <span>NFC: {data.communication.nfc ? "Yes" : "No"}</span>
            ) : null
          }
          {
            data.communication && data.communication.ir != null ? (
              <span>Ir blaster: {data.communication.ir ? "Yes" : "No"}</span>
            ) : null
          }
          <h3>USB:</h3>
          <div class="flex flex-col ml-2">
            {
              data.communication && data.communication.usb.type ? (
                <span>type: {data.communication.usb.type}</span>
              ) : null
            }
            {
              data.communication && data.communication.usb.otg != null ? (
                <span>OTG: {data.communication.usb.otg ? "Yes" : "No"}</span>
              ) : null
            }
          </div>
        </div>
      </div>
      {
        data.fingerprint && data.fingerprint ? (
          <span>Fingerprint reader: {data.fingerprint}</span>
        ) : null
      }
      <div class="flex flex-col">
        <h3>Battery:</h3>
        <div class="flex flex-col ml-2">
          {
            data.battery && data.battery.type ? (
              <span>type: {data.battery.type}</span>
            ) : null
          }
          {
            data.battery && data.battery.size ? (
              <span>size: {data.battery.size}mAh</span>
            ) : null
          }
          {
            data.battery && data.battery.removable != null ? (
              <span>removable: {data.battery.removable ? "Yes" : "No"}</span>
            ) : null
          }
          {
            data.battery && data.battery.charging.standard ? (
              <span>charging standard: {data.battery.charging.standard}</span>
            ) : null
          }
        </div>
      </div>
      <div class="flex flex-col">
        <h3>Display:</h3>
        <div class="flex flex-col ml-2">
          {
            data.display && data.display.type ? (
              <span>type: {data.display.type}</span>
            ) : null
          }
          {
            data.display && data.display.refresh_rate ? (
              <span>refresh rate: {data.display.refresh_rate}Hz</span>
            ) : null
          }
          {
            data.display && data.display.HDR ? (
              <span>HDR: {data.display.HDR}</span>
            ) : null
          }
          {
            data.display && data.display.nits ? (
              <span>nits: {data.display.nits}</span>
            ) : null
          }
          {
            data.display && data.display.resolution ? (
              <span>resolution: {data.display.resolution}</span>
            ) : null
          }
          {
            data.display && data.display.density ? (
              <span>density: {data.display.density}</span>
            ) : null
          }
        </div>
      </div>
      <div class="flex flex-col">
        <h3>Sound:</h3>
        <div class="flex flex-col ml-2">
          {
            data.sound && data.sound.stereo != null ? (
              <span>stereo: {data.sound.stereo ? "Yes" : "No"}</span>
            ) : null
          }
          {
            data.sound && data.sound.speakers_count ? (
              <span>speakers count: {data.sound.speakers_count}</span>
            ) : null
          }
          {
            data.sound && data.sound.jack != null ? (
              <span>jack: {data.sound.jack ? "Yes" : "No"}</span>
            ) : null
          }
        </div>
      </div>
    </div>
  </div>
</Layout>
